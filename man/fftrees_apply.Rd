% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/fftrees_apply.R
\name{fftrees_apply}
\alias{fftrees_apply}
\title{Apply an FFT to data and generate accuracy statistics}
\usage{
fftrees_apply(
  x,
  mydata = NULL,
  newdata = NULL,
  allNA.pred = FALSE,
  finNA.pred = "noise"
)
}
\arguments{
\item{x}{An object with FFT definitions which are to be applied to current data (as an \code{FFTrees} object).}

\item{mydata}{The type of data to which the FFT should be applied (as character, either \code{"train"} or \code{"test"}).}

\item{newdata}{New data to which an FFT should be applied (as a data frame).}

\item{allNA.pred}{What outcome should be predicted if \emph{all} cue values in tree nodes are \code{NA} (as logical)?
Default: \code{allNA.pred = FALSE}.
(Note: The name of this arg is misleading, as it is used whenever the \emph{final} node of a tree encounters a cue value of \code{NA}.
The cue values of earlier nodes just need not to have pointed to an exit to reach the final node.
Hence, the case that \emph{all} cue values are \code{NA} is only a rare special case of this particular one.)}

\item{finNA.pred}{What outcome should be predicted if the \emph{final} node in a tree has a cue value of \code{NA} (as logical)?
Default: \code{finNA.pred = TRUE}.
Options to implement include:
- "noise"  (predict FALSE/0/left),
- "signal" (predict TRUE/1/right),
- "majority" (predict the more common baseline case, else predict noise),
- "baseline" (flip a coin using the criterion baseline),
- "dnk" (decide to 'do not know'/tertium datur).}
}
\value{
A modified \code{FFTrees} object (with lists in \code{x$trees} containing information on FFT decisions and statistics).
}
\description{
\code{fftrees_apply} applies a fast-and-frugal tree (FFT, as an \code{FFTrees} object)
to a dataset (of type \code{mydata}) and generates corresponding accuracy statistics
(on cue levels and for trees).

\code{fftrees_apply} is called internally by the main \code{\link{FFTrees}} function
(with \code{mydata = "train"} and --- if test data exists --- \code{mydata = "test"}).
Alternatively, \code{fftrees_apply} is called when predicting outcomes for new data
by \code{\link{predict.FFTrees}}.
}
\seealso{
\code{\link{FFTrees}} for creating FFTs from and applying them to data.
}
\keyword{internal}
